"""
Django settings for wsitEvent project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for master
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/



# SECURITY WARNING: don't run with debug turned on in master!


os.environ['ENVIRONMENT_TYPE'] = 'development'
DEBUG = True
TEMPLATE_DEBUG = True
ALLOWED_HOSTS = ['*']

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app',
    'publicfront',
    'storages',
    'django_crontab'
)

import djcelery
djcelery.setup_loader()
# Celery config ##
BROKER_URL = "amqp://guest:guest@localhost://"

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'publicfront.middleware.user_login_middleware.UserLoginMiddleware',
    # 'publicfront.middleware.timezone_middleware.TimezoneMiddleware',
    'publicfront.middleware.export_middleware.ExportMiddleware',
)

ROOT_URLCONF = 'wsitEvent.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                "django.core.context_processors.media",
                # 'publicfront.views.common.get_style',
            ],
        },
    },
]

WSGI_APPLICATION = 'wsitEvent.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/ #databases



CRONJOBS = [
    ('*/1 * * * *', 'app.views.mobile_device.push_notification'),
    # ('1 0 * * *', 'app.views.gbhelper.cron_job_library.daily_job'),
    ('*/5 * * * *', 'app.views.gbhelper.cron_job_library.daily_job'),
]
# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/
SASS_PROCESSOR_ROOT = 'publicfront/compiled/'
LANGUAGE_CODE = 'en-us'

TIME_ZONE = None

USE_I18N = True

USE_L10N = True
EMAIL_SENDER = 'workspaceinfotech@gmail.com'
DEFAULT_FROM_EMAIL = EMAIL_SENDER
AWS_ACCESS_KEY_ID = ''
AWS_SECRET_ACCESS_KEY = ''
SMTP_USERNAME = ''
SMTP_PASSWORD = ''

DATABASES = {
         'default': {
             'NAME': 'event_prod_27_04_db',
             'ENGINE': 'django.db.backends.mysql',
             'USER': 'root',
             'PASSWORD': '1',
             'HOST': 'localhost',
             'PORT': '3306',
             'OPTIONS': {
               'autocommit': True,
             },
         }
     }

STATIC_URL_ALT = '/static/'

if DEBUG:
    import logging
    l = logging.getLogger('django.db.backends')
    l.setLevel(logging.DEBUG)
    l.addHandler(logging.StreamHandler())


STATIC_ROOT = os.path.join(os.path.dirname(os.path.dirname(os.path.abspath(__file__))), 'static')
STATIC_URL = '/static/'

USE_TZ = False


LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/var/log/wsit-event.log',
            'formatter': 'verbose'
        },
    },
    'formatters': {
        'verbose': {
            'format': "[%(asctime)s] %(levelname)s [%(name)s:%(lineno)s] %(message)s",
            'datefmt': "%d/%b/%Y %H:%M:%S"
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'loggers': {
        'app': {
            'handlers': ['file'],
            'level': 'DEBUG',
        },
        'publicfront': {
            'handlers': ['file'],
            'level': 'DEBUG',
        },
    },
}


SITE_URL = 'http://127.0.0.1:8000'


